
services:
  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      appnet:
        ipv4_address: 172.25.0.10

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      appnet:
        ipv4_address: 172.25.0.11

  fastapi-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - IB_HOST=${IB_HOST}
      - IB_PORT=${IB_PORT}
      - IB_CLIENT_ID=${IB_CLIENT_ID}
      - IB_RTH_DEFAULT=${IB_RTH_DEFAULT}
      - IB_CONNECT_TIMEOUT=${IB_CONNECT_TIMEOUT}
      - IB_RECONNECT_BACKOFF_SECONDS=${IB_RECONNECT_BACKOFF_SECONDS}
      - IB_MARKETDATA_DELAY=${IB_MARKETDATA_DELAY}
      - LOG_LEVEL=${LOG_LEVEL}
      - SQL_LOG_LEVEL=${SQL_LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
    ports:
      - "8000:8000"
    # volumes:
    #   - ./app:/app/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      appnet:
        ipv4_address: 172.25.0.20

volumes:
  pgdata:

networks:
  appnet:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-trading
      com.docker.network.driver.mtu: 1500
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16
